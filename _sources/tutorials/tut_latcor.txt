Search lattice correspondences
==============================

The following example uses :py:func:`structrans.lat_cor` to find
the best two lattice correspondences from *face centered cubic* with `a` = 2
to *primitive tetragonal* with `a` = 1.414 and `c` = 2.

.. doctest::

    >>> from structrans import lat_cor
    >>> res = lat_cor(2, 2, 6, [1.414, 2], disp=2, nsol=2)
    Input data
    ==========
     - Austenite lattice:
        3D Bravais Lattice - Cubic F (face centered cubic):    a = 2
     - Martensite lattice:
        3D Bravais Lattice - Tetragonal P:    a = 1.414,    c = 2
    ...
    Solution 1 out of 2:
    ----------------------
     - Lattice correspondence:
        [ 0.00  0.50 -0.50] ==> [ 1 0 0 ]
        [ 0.00  0.50  0.50] ==> [ 0 1 0 ]
        [ 1.00  0.00  0.00] ==> [ 0 0 1 ]
     - Transformation stretch matrix:
       U = [ 1.000000  0.000000  0.000000]
           [ 0.000000  0.999849  0.000000]
           [ 0.000000  0.000000  0.999849]
     ...
     - Sorted eigen strains:
        lambda_1 = 0.999849, lambda_2 = 0.999849, lambda_3 = 1.
     ...
    <BLANKLINE>
    Solution 2 out of 2:
    ----------------------
     - Lattice correspondence:
        [ 0.50  0.50  0.00] ==> [ 1 0 0 ]
        [ 0.00  0.50  0.50] ==> [ 0 1 0 ]
        [ 1.00 -0.50  0.50] ==> [ 0 0 1 ]
     - Transformation stretch matrix:
       U = [ 0.891999  0.044213 -0.277838]
           [ 0.044213  0.920273 -0.161105]
           [-0.277838 -0.161105  1.330925]
     ...
     - Sorted eigen strains:
        lambda_1 = 0.750388, lambda_2 = 0.881537, lambda_3 = 1.51127.
     ...
    ...